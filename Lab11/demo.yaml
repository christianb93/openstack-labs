---
##########################################################################
# A playbook to set up a demo on a running OpenStack instance. This will
# run on the install_node which needs to be present in the inventory.
#
# This playbook uses the credentials created by site.yaml
##########################################################################

- name: Run Terraform and build inventory dynamically
  hosts: localhost
  roles:
  - terraform


- name: Import credentials
  hosts: all
  gather_facts: no
  tasks:
    - name: Read credentials
      include_vars:
        file: "~/.os_credentials/credentials.yaml"

- name: Prepare for instance launch
  become: yes
  hosts: install_node
  vars_files:
    - global_vars.yaml
  tasks:
    - name: Create m1.nano flavor
      os_nova_flavor:
        auth:
          auth_url: http://controller:5000/v3
          username: admin
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "admin"
          password: "{{OS_ADMIN_PASSWORD}}"
        auth_type: password
        disk: 1
        name: m1.nano
        ram: 128
        vcpus: 1
        state: present
    - name: Create demo project
      os_project:
        auth:
          auth_url: http://controller:5000/v3
          username: admin
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "admin"
          password: "{{OS_ADMIN_PASSWORD}}"
        auth_type: password
        description: "Sample project"
        domain: default
        name: demo
        state: present
    - name: Create demo user
      os_user:
        auth:
          auth_url: http://controller:5000/v3
          username: admin
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "admin"
          password: "{{OS_ADMIN_PASSWORD}}"
        auth_type: password
        description: "Sample user"
        domain: default
        name: demo
        password: "{{OS_DEMO_PASSWORD}}"
        state: present
    - name: Assign member role to demo user
      os_user_role:
        auth:
          auth_url: http://controller:5000/v3
          username: admin
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "admin"
          password: "{{OS_ADMIN_PASSWORD}}"
        auth_type: password
        project: demo
        user: demo
        role: member
        state: present
    - name: Import key pair as demo user
      os_keypair:
        auth:
          auth_url: http://controller:5000/v3
          username: demo
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "demo"
          password: "{{OS_DEMO_PASSWORD}}"
        auth_type: password
        name: demo-key
        public_key_file: "{{install_user_home}}/{{ssh_key_name}}.pub"
    - name: Allow ICMP traffic for default security group in demo project
      os_security_group_rule:
        auth:
          auth_url: http://controller:5000/v3
          username: demo
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "demo"
          password: "{{OS_DEMO_PASSWORD}}"
        auth_type: password
        direction: ingress
        protocol: icmp
        remote_ip_prefix: "0.0.0.0/0"
        security_group: default
        state: present
    - name: Allow SSH traffic for default security group in demo project
      os_security_group_rule:
        auth:
          auth_url: http://controller:5000/v3
          username: demo
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "demo"
          password: "{{OS_DEMO_PASSWORD}}"
        auth_type: password
        direction: ingress
        protocol: tcp
        port_range_max: 22
        port_range_min: 22
        remote_ip_prefix: "0.0.0.0/0"
        security_group: default
        state: present
    - name: Create flat network (shared, owned by admin)
      os_network:
        auth:
          auth_url: http://controller:5000/v3
          username: admin
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "admin"
          password: "{{OS_ADMIN_PASSWORD}}"
        auth_type: password
        external: yes
        name: flat-network
        provider_network_type: flat
        provider_physical_network: physnet
        shared: true
        state: present
    - name: Create VXLAN network (owned by demo user)
      os_network:
        auth:
          auth_url: http://controller:5000/v3
          username: demo
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "demo"
          password: "{{OS_DEMO_PASSWORD}}"
        auth_type: password
        external: no
        name: vxlan-network
        shared: false
        state: present
    - name: Create subnet on VXLAN network
      os_subnet:
        auth:
          auth_url: http://controller:5000/v3
          username: demo
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "demo"
          password: "{{OS_DEMO_PASSWORD}}"
        auth_type: password
        enable_dhcp: yes
        gateway_ip: 172.18.0.1
        cidr: 172.18.0.0/24
        network_name: vxlan-network
        name: vxlan-subnet
        state: present
        allocation_pool_start: 172.18.0.2
        allocation_pool_end:  172.18.0.10
    - name: Create subnet on flat network
      os_subnet:
        auth:
          auth_url: http://controller:5000/v3
          username: admin
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "admin"
          password: "{{OS_ADMIN_PASSWORD}}"
        auth_type: password
        enable_dhcp: yes
        gateway_ip: 172.16.0.1
        cidr: 172.16.0.0/24
        network_name: flat-network
        name: flat-subnet
        state: present
        allocation_pool_start: 172.16.0.2
        allocation_pool_end:  172.16.0.10


- name: Create test instances and show results
  hosts: install_node
  vars_files:
    global_vars.yaml
  tasks:
    - name: Create two instances in the VXLAN network that we have just created
      os_server:
        auth:
          auth_url: http://controller:5000/v3
          username: demo
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "demo"
          password: "{{OS_DEMO_PASSWORD}}"
        auth_type: password
        name: "{{item}}"
        auto_ip: no
        flavor: m1.nano
        image: cirros
        key_name: "{{ssh_key_name}}"
        network: vxlan-network
        security_groups:
          - default
      loop:
        - demo-instance-1
        - demo-instance-2
    - name: Retrieve server list
      os_server_facts:
        auth:
          auth_url: http://controller:5000/v3
          username: demo
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "demo"
          password: "{{OS_DEMO_PASSWORD}}"
        auth_type: password
        server: "demo-instance-*"
      register: server_info
    - name: Show output
      debug:
        var: server_info
    - name: Create router to access our instances from the flat network
      os_router:
        auth:
          auth_url: http://controller:5000/v3
          username: demo
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "demo"
          password: "{{OS_DEMO_PASSWORD}}"
        auth_type: password
        interfaces:
          vxlan-subnet
        name: demo-router
        network: flat-network   
    - name: Associate floating IP address
      os_floating_ip:
        auth:
          auth_url: http://controller:5000/v3
          username: demo
          os_user_domain_name: "default"
          os_project_domain_name: "default"
          os_project_name: "demo"
          password: "{{OS_DEMO_PASSWORD}}"
        auth_type: password
        reuse: yes
        nat_destination: vxlan-network
        network: flat-network
        server: demo-instance-1
        state: present
        wait: yes
      register: floating_ip
    - name: print floating IP
      debug:
        var: floating_ip.floating_ip.floating_ip_address

