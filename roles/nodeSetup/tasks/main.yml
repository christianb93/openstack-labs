---
# On each node, we create files which we can easily source from the shell
# to set the OS_* environment variables expected by the openstack client
# The first one - admin_openrc - corresponds to the admin role, the second
# one to our demo user
- name: Create admin-openrc
  template:
    dest: "{{install_user_home}}/admin-openrc"
    force: yes
    mode: 0700
    src: "admin_openrc.j2"
- name: Create demo-openrc
  template:
    dest: "{{install_user_home}}/demo-openrc"
    force: yes
    mode: 0700
    src: "demo_openrc.j2"
- name: Distribute private key
  copy:
    src: "{{playbook_dir}}/demo-key"
    dest: "{{install_user_home}}/demo-key"
    owner: "{{install_user}}"
    group: "{{install_user}}"
    mode: 0700
- name: Distribute public key
  copy:
    src: "{{playbook_dir}}/demo-key.pub"
    dest: "{{install_user_home}}/demo-key.pub"
    owner: "{{install_user}}"
    group: "{{install_user}}"
    mode: 0700
#
# Bring up all devices and set up name resolution
#
- name: Bring up VM network device
  shell:
    ip link set {{vm_network_device}} up

- name: Ensure entries for all nodes exist in /etc/hosts
  lineinfile:
    line: "{{ item[1].mgmt_ip}} {{ item[0] }}"
    state: present
    path: /etc/hosts
  loop:
    "{{ hostvars.items() | list }}"
  loop_control:
    label: "{{ item[0] }}"


#
# Enable APT repositories and install python openstack client
#
- name: Install ubuntu cloud keyring
  apt:
    name: ubuntu-cloud-keyring
    force_apt_get: yes
    update_cache: yes
    state: latest
- name: Add repository
  apt_repository:
    repo: "deb http://ubuntu-cloud.archive.canonical.com/ubuntu bionic-updates/{{openstack_release}} main"
    state: present
    update_cache: yes
- name: Install python client for OpenStack
  apt:
    name: python3-openstackclient
    force_apt_get: yes
    state: latest
